<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com"/>

    <!-- 处理@Controller的使用前置配置 -->
    <mvc:annotation-driven/>

    <!-- 处理静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760000"></property>
        <property name="maxInMemorySize" value="40960"></property>
        <property name="uploadTempDir" value="WEB-INF/static/upload"></property>
    </bean>

    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    </bean>

    <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                </bean>
            </list>
        </property>
    </bean>

    <import resource="classpath:/spring/spring-db.xml"/>
    <!--<import resource="classpath:/spring/spring-redis.xml"/>-->

    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>
    <!-- 启动spring定时器 -->
    <!--<task:annotation-driven/>-->
    <!--<tx:annotation-driven/>-->


    <bean id="aspectBean" class="com.sheng.example.springaop.aspect.TestAspect" />
    <!-- 配置事物切点，并把切点和事物关联起来-->
    <aop:config>
        <aop:aspect id="TestAspect" ref="aspectBean">
            <!--配置com.spring.service包下所有类或接口的所有方法-->
            <aop:pointcut id="businessService" expression="execution(* com.sheng.example.springaop.service.impl.AOPServiceImpl.aop*(..))" />
            <aop:before pointcut-ref="businessService" method="doBefore"/>
            <aop:after pointcut-ref="businessService" method="doAfter"/>
            <aop:around pointcut-ref="businessService" method="doAround"/>
            <aop:after-throwing pointcut-ref="businessService" method="doThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>

    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <!--<bean id="myInterceptor" class="com.sheng.example.springaop.aspect.TestAnnotationAspect"/>-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"
    />

    <!-- 解决静态资源问题
   mapping：映射
   location：本地资源路径，注意必须是webapp根目录下的路径。两个*，它表示映射resources/下所有的URL，包括子路径（即接多个/）
   -->
    <mvc:resources location="/WEB-INF/static/upload/" mapping="/upload/"/>
    <mvc:resources location="/WEB-INF/static/js/" mapping="/js/*"/>
    <mvc:resources location="/WEB-INF/static/css/" mapping="/css/**"/>
    <mvc:resources location="/WEB-INF/static/html/" mapping="/html/**"/>

    <!-- 缓存设置 -->
    <!-- 启动缓存 -->
    <!--<cache:annotation-driven cache-manager="cacheManager" />-->

    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">-->
    <!--<property name="cacheManager" ref="ehcache"></property>-->
    <!--</bean>-->

    <!--<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
    <!--<property name="configLocation" value="classpath:ehcache-setting.xml"></property>-->
    <!--</bean>-->

    <bean id="springDao" name="springDao2" class="com.huangy.ioc.set.SpringDao"/>

    <bean id="beanNameTestModel" class="com.model.BeanNameTestModel" init-method="initMethodDemo" destroy-method="destoryMethodDemo"/>

<!--    <bean id="demoA" class="com.model.DemoA" scope="singleton">-->
<!--        <property name="demoB" ref="demoB"/>-->
<!--     </bean>-->
<!--    <bean id="demoB" class="com.model.DemoB" scope="singleton">-->
<!--        <property name="demoA" ref="demoA"/>-->
<!--    </bean>-->

<!--    <bean id="demoC" class="com.model.DemoC">-->
<!--        <constructor-arg ref="demoA"/>-->
<!--    </bean>-->


    <bean id="scopeBean" class="com.model.ScopeBean" scope="request"/>

</beans>